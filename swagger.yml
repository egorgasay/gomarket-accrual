openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'ItemsAPI Service API'

tags:
  - name: 'ItemsAPI'

paths:
  # Items API

  /api/v1/items:
    get:
      tags:
        - ItemsAPI
      summary: 'Get all items'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetItemsRequest'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/item'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  responses:
    NoContent:
      description: 'No content'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                example: []
    BadRequest:
      description: 'Bad request'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    InternalServerError:
      description: 'Internal server error'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  schemas:
    GetItemsRequest:
      type: 'object'
      properties:
        offset:
          type: integer
          example: 0
          minimum: 0
        limit:
          type: integer
          example: 1000
          minimum: 0
        query:
          type: object
          properties:
            ids:
              type: array
              items:
                type: integer
              example: [ 1 ]
            price:
              type: object
              properties:
                from:
                  type: number
                  example: 199.00
                to:
                  type: number
                  example: 2000.000
            names:
              type: object
              properties:
                full:
                  type: array
                  items:
                    type: string
                  example: [ "MacBook Pro 14x" ]
                partly:
                  type: array
                  items:
                    type: string
                  example: [ "MacBook" ]
        sort_by:
          type: object
          properties:
            field:
              type: string
              example: price
            desc:
              type: boolean
              example: false
    item:
      type: 'object'
      required:
        - id
        - name
        - description
        - price
        - sizes
      properties:
        id:
          type: integer
          format: int64
        name:
          type: 'string'
          example: 'Red T-Shirt'
        description:
          type: 'string'
          example: 'Cool description'
        price:
          type: 'number'
          format: 'double'
          example: 199.00
        sizes:
          type: array
          items:
            type: object
            required:
              - size
              - quantity
            properties:
              size:
                type: string
                example: 'M'
              quantity:
                type: integer
                format: int64
                example: 5

  securitySchemes:
    SessionAuth:
      type: 'apiKey'
      in: 'header'
      name: 'SESSION-ID'
security:
  - SessionAuth: []
